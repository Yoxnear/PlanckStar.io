---
// 3 Instructions in this component 

// Start here adjusting the size of the dot (px). ❶
const size = 16;

// Pick two colors from Tailwind's color palette. ❷
const color1 = "bg-white/50"; // Color when close to the cursor
const color2 = "bg-white/20"; // Color when far from the cursor

// Adjust the speed of the follower (0.1 is slow, 0.3 is fast). ❸
const speed = 0.1;
---

<div
  id="mouse-area"
  class="cursor-none relative w-full h-80 bg-gray-950 overflow-hidden not-content"
>
  <div
    id="follower"
    data-color1={color1}
    data-color2={color2}
    data-speed={speed}
    class="absolute rounded-full bg-white/20 transition-colors duration-300"
    style=`width: ${size}px; height: ${size}px;`
  >
  </div>
</div>

<script>
  const follower = document.getElementById("follower");
  const area = document.getElementById("mouse-area");

  const color1 = follower.dataset.color1;
  const color2 = follower.dataset.color2;

  const speed = follower.dataset.speed;

  const distanceThreshold = 8;

  const followerSize = follower.offsetWidth;
  let mouseX = 0;
  let mouseY = 0;
  let posX = 0;
  let posY = 0;

  area.addEventListener("mousemove", (e) => {
    const rect = area.getBoundingClientRect();
    mouseX = e.clientX - rect.left;
    mouseY = e.clientY - rect.top;
  });

  function animate() {
    posX += (mouseX - posX) * speed;
    posY += (mouseY - posY) * speed;

    follower.style.transform = `translate(${posX - followerSize / 2}px, ${posY - followerSize / 2}px)`;

    const distance = Math.hypot(posX - mouseX, posY - mouseY);

    if (distance < distanceThreshold) {
      follower.classList.add(color1);
      follower.classList.remove(color2);
    } else {
      follower.classList.add(color2);
      follower.classList.remove(color1);
    }

    requestAnimationFrame(animate);
  }

  animate();
</script>
